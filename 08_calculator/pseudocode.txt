create an add() function
    set two parameters: numAddend1, numAddend2
    create a sum number variable

    sum = numAddend1 + numAddend2

    return sum

create a subtract() function
    set two parameters: Minuend, subtrahend
    create a difference number variable

    sum = Minuend - subtrahend

    return difference

create a sum() function
    set a parameter: addendArray

    create a number variable named addendCounter
    create a number variable named sumArray

    sumArray = 0
    addendCounter = 0

    if addendArray.length is equal to 0
        THEN return addendArray.length

    Loop from addendCounter to addendArray length
        sumArray += addendArray[addendCounter]

    return sumArray

create a multiply() function
    set a parameter: factorArray

    create a number variable named factorCounter
    create a number variable named productArray

    productArray = 1
    factorCounter = 0

    if factorArray.length is equal to 0
        THEN return factorArray.length

    Loop from factorCounter to factorArray length
        productArray *= factorArray[factorCounter]

    return productArray


create a power() function
    set a parameter: baseNumber, raiseToPower

    create a number variable named powerProduct
    create a number variable named powerCounter
    
    powerProduct = 1
    powerCounter = 1

    Loop from powerCounter to raiseToPower
       powerProduct *= baseNumber

    return powerProduct

create a factorial() function
    set a parameter: factorialNumber

    create a number variable named factorialProduct
    create a number variable named factorialCounter

    factorialProduct = factorialNumber
    factorialCounter = 1

    if factorialNumber is equal to 0
    THEN return 1

    Loop from factorialCounter to factorialNumber
        factorialProduct *= factorialCounter;

    return factorialProduct